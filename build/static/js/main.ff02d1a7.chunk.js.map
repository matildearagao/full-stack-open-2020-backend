{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","components/Notification.js","services/phonebook.js","App.js","index.js"],"names":["Filter","value","onChange","PersonForm","newName","newNumber","onChangeName","onChangeNumber","onClick","type","Persons","personsFiltered","deletePerson","map","person","i","key","name","number","id","Notification","notification","classError","classStyle","className","baseUrl","axios","get","then","response","data","newObject","post","delete","put","App","useState","persons","setPersons","setNewName","setNewNumber","nameToFilter","setNameToFilter","setNotification","errorMessage","setErrorMessage","useEffect","phonebookService","res","filter","toLowerCase","includes","e","target","event","preventDefault","duplicateName","length","personToUpdate","window","confirm","catch","err","newPerson","concat","console","log","setTimeout","newPersons","personToDelete","find","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ff02d1a7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <div>\r\n    filter shown with <input value={value} onChange={onChange} />\r\n  </div>\r\n);\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\n\r\nexport default function PersonForm({\r\n  newName,\r\n  newNumber,\r\n  onChangeName,\r\n  onChangeNumber,\r\n  onClick,\r\n}) {\r\n  return (\r\n    <form>\r\n      <div>\r\n        name: <input value={newName} onChange={onChangeName} />\r\n      </div>\r\n      <div>\r\n        number: <input value={newNumber} onChange={onChangeNumber} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\" onClick={onClick}>\r\n          add\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nconst Persons = ({ personsFiltered, deletePerson }) =>\r\n  personsFiltered.map((person, i) => (\r\n    <li key={i}>\r\n      {person.name} {person.number}\r\n      <button onClick={()=>deletePerson(person.id)}>delete</button>\r\n    </li>\r\n  ));\r\n\r\nexport default Persons;\r\n","import React from 'react'\r\n\r\nconst Notification = ({ notification, classError = false }) => {\r\n const classStyle = classError ? \"error\" : \"success\";\r\n\r\n  return (\r\n       <div className={classStyle}>\r\n        {notification}\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Notification","import axios from 'axios';\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll =()=>{\r\n    const request = axios.get(baseUrl)\r\n      return request.then(response => response.data)\r\n}\r\n\r\nconst create = (newObject) => {\r\n    const request = axios.post(baseUrl, newObject);\r\n    return request.then((response) => response.data);\r\n  };\r\nconst deletePerson = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`);\r\n    return request.then((response) => response.data);\r\n  };\r\nconst updatePerson = (newObject) => {\r\n    const request = axios.put(`${baseUrl}/${newObject.id}`, newObject);\r\n    return request.then((response) => response.data);\r\n  };\r\n\r\nexport default { getAll, create, deletePerson, updatePerson};\r\n","import React, { useState, useEffect } from 'react';\n\nimport Filter from './components/Filter';\nimport PersonForm from './components/PersonForm';\nimport Persons from './components/Persons';\nimport Notification from './components/Notification';\n\nimport phonebookService from './services/phonebook';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n  const [nameToFilter, setNameToFilter] = useState('');\n  const [notification, setNotification] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  useEffect(() => {\n    phonebookService.getAll().then((res) => setPersons(res));\n  }, []);\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const duplicateName = persons.filter((person) => person.name === newName);\n\n    if (duplicateName.length) {\n      const personToUpdate = duplicateName[0];\n      const answer = window.confirm(\n        `${personToUpdate.name} is already added to phonebook, replace the old number with the new one?`,\n      );\n\n      if (answer) {\n        personToUpdate.number = newNumber;\n\n        phonebookService\n          .updatePerson(personToUpdate)\n          .then((res) => {\n            setPersons(\n              persons.map((person) => {\n                return person.id === res.id ? res : person;\n              }),\n            );\n            setNotification(`Updated ${personToUpdate.name} number`);\n          })\n          .catch((err) => {\n            setPersons(\n              persons.filter(person => {\n                return person.id !== personToUpdate.id;\n              })\n            );\n            setErrorMessage(\n              `Information of ${personToUpdate.name} has already been removed from the server`,\n            );\n          });\n      }\n    } else {\n      const newPerson = {\n        name: newName,\n        number: newNumber,\n      };\n\n      phonebookService\n        .create(newPerson)\n        .then((res) => {\n          setPersons(persons.concat(res));\n          setNotification(`Added ${newPerson.name}`);\n        })\n        .catch((err) => {\n          console.log(err)\n        });\n    }\n\n    setNewName('');\n    setNewNumber('');\n    setTimeout(() => {\n      setErrorMessage('');\n      setNotification('');\n    }, 5000);\n  };\n\n  const handleFilter = (e) => {\n    setNameToFilter(e.target.value);\n  };\n\n  const personsFiltered = nameToFilter\n    ? persons.filter((person) =>\n        person.name.toLowerCase().includes(nameToFilter.toLowerCase()),\n      )\n    : persons;\n\n  const handleDelete = (id) => {\n    const newPersons = persons.filter((person) => id !== person.id);\n    const personToDelete = persons.find((person) => person.id === id);\n\n    const answer = window.confirm(`Delete ${personToDelete.name}?`);\n    if (answer)\n      phonebookService.deletePerson(id).then((res) => setPersons(newPersons));\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      {errorMessage ? <Notification notification={errorMessage} classError={true} /> : null}\n      {notification ? <Notification notification={notification} /> : null}\n\n      <Filter value={nameToFilter} onChange={handleFilter} />\n      <h2>Add a new</h2>\n      <PersonForm\n        newName={newName}\n        newNumber={newNumber}\n        onChangeName={handleNameChange}\n        onChangeNumber={handleNumberChange}\n        onClick={handleSubmit}\n      />\n\n      <h2>Numbers</h2>\n      <Persons personsFiltered={personsFiltered} deletePerson={handleDelete} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.css'\n\n\n\nReactDOM.render( \n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}